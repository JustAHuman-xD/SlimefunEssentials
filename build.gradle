plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "Jei"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = "Cloth Config, Rei"
        url = "https://maven.shedaniel.me/"
    }
    maven {
        name = "MoreBlockPredicates"
        url = "https://jitpack.io"
    }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation ("dev.emi:emi:${project.emi_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation("mezz.jei:${project.jei_version}") {
        exclude(group: "mezz.jei")
    }

    modImplementation("com.github.JustAHuman-xD:MoreBlockPredicates:${project.mbp_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:$rei_version")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-runtime-fabric:$rei_version") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:$rei_version")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version")

    modApi "com.terraformersmc:modmenu:${project.mod_menu_version}"
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    compileOnly "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

tasks.register('copyJar', Copy) {
    from 'C:/Users/keena/Documents/GitHub/SlimefunEssentials/build/libs/Slimefun Essentials-2.4.jar'
    into 'C:/Users/keena/curseforge/minecraft/Instances/Testing (1.19.3)/mods'
    new File('C:/Users/keena/curseforge/minecraft/Instances/Testing (1.19.3)/config', "slimefun_essentials_restart.txt").text = ""
}

assemble.finalizedBy(copyJar)
